<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_col</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_player_par</parentName>
  <maskName>spr_player_col</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//angles
leftarm_angle=0;
rightarm_angle=0;

leftleg_angle=0;
rightleg_angle=0;

head_angle=0;



MAXleftarm_angle=0;
MAXrightarm_angle=0;

MAXleftleg_angle=0;
MAXrightleg_angle=0;

MAXhead_angle=0;

//colors
leftarm_color=global.bc_armleft
rightarm_color=global.bc_armright

leftleg_color=global.bc_legleft
rightleg_color=global.bc_legright

torso_color=global.bc_torso
head_color=global.bc_head



//other


suit=global.pl_suit
hat=global.pl_hat

player_health=100

facing=1

animation=0

currenttool=-1

dead=false

event_inherited();



//start dead check
alarm[5]=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*///dead dectecting

if dead=true {
    alarm[4] = 3
} else {
    alarm[5] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///respawning
player_health=100
visible=true
x=xstart
y=ystart
gravity=0
dead=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///indexes limits

//left arm
if leftarm_angle&gt;7{
    leftarm_angle=0
}
if leftarm_angle&lt;0{
    leftarm_angle=7
}


//right arm
if rightarm_angle&gt;7{
    rightarm_angle=0
}
if rightarm_angle&lt;0{
    rightarm_angle=7
}


//left leg
if leftleg_angle&gt;7{
    leftleg_angle=0
}
if leftleg_angle&lt;0{
    leftleg_angle=7
}


//right leg
if rightleg_angle&gt;7{
    rightleg_angle=0
}
if rightleg_angle&lt;0{
    rightleg_angle=7
}



//alpha
if image_alpha&gt;1{
    image_alpha=0
}
if image_alpha&lt;0{
    image_alpha=1
}

//hat
if hat&gt;25{
    hat=0
}
if hat&lt;0{
    hat=25
}

//suit
if suit&gt;13{
    suit=0
}
if suit&lt;0{
    suit=13
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movement

//movement keys:
key_left = ord("A")

key_right = ord("D")

key_jump = vk_space

key_reset = ord("R")



if dead = false {
//gravity
if place_free(x,y+1){
    gravity=1
}else{
    gravity=0
}


if global.ispaused=false{
//move left
if keyboard_check(key_left){
    if place_free(x-3,y){
    x-=3}
    facing=-1
    animation=1
}
else
//move right
if keyboard_check(key_right){
    if place_free(x+3,y){
    x+=3}
    facing=1
    animation=1
}


//walking sound
if keyboard_check_pressed(key_left) {
    audio_play_sound(snd_walk,0,true)
}

if keyboard_check_pressed(key_right) {
    audio_play_sound(snd_walk,0,true)
}


//stop walking
if keyboard_check_released(key_right){
    animation=0
    audio_stop_sound(snd_walk)
}
else
if keyboard_check_released(key_left){
    animation=0
    audio_stop_sound(snd_walk)
}

//jumping
if keyboard_check(key_jump){
    if place_meeting(x,y+1,obj_solid){
        if place_free(x,y-1){
            vspeed=-12
    audio_play_sound(snd_woosh,0,false)
        }
    }
}
}

if !place_meeting(x,y+1,obj_part){
    if vspeed!=0{
        animation=2
    }
}

if place_meeting(x,y-1,obj_part) {
    y-=1
}



//reset
if keyboard_check_pressed(key_reset){
    player_health=0
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animation controller (broken)
/*
if MAXleftarm_angle &lt; leftarm_angle {
    leftarm_angle-=1
}
else
if MAXleftarm_angle &gt; leftarm_angle {
    leftarm_angle+=1
}


if MAXrightarm_angle &lt; rightarm_angle {
    rightarm_angle-=1
}
else
if MAXrightarm_angle &gt; rightarm_angle {
    rightarm_angle+=1
}

















if MAXleftleg_angle &lt; 0 {
    leftleg_angle-=1
}
else
if MAXleftleg_angle &gt; 0 {
    leftleg_angle+=1
}

if MAXrightleg_angle &lt; rightleg_angle {
    rightleg_angle-=1
}
else
if MAXrightleg_angle &gt; rightleg_angle {
    rightleg_angle+=1
}




if MAXhead_angle &lt; head_angle {
    head_angle-=1
}
else
if MAXhead_angle &gt; head_angle {
    head_angle+=1
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///anims (not finished)
//very incomplete and broken!
//still figuring out how to make it work...
/*

if animation = 0 {
    MAXleftarm_angle=0;
    MAXrightarm_angle=0;

    MAXleftleg_angle=0;
    MAXrightleg_angle=0;

    MAXhead_angle=0;
}



if animation = 1 {
    MAXleftarm_angle=-1;
    MAXrightarm_angle=1;

    MAXleftleg_angle=1;
    MAXrightleg_angle=-1;

    MAXhead_angle=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///heallth manager
if player_health &gt;= 100 {
    player_health = 100
}


if player_health &lt;= 0 {
    player_health = 0
}



if player_health &lt;= 0 {
    visible=true
    x=xstart
    y=ystart
    gravity=0
    player_health=100
}


if y&gt;=room_height {
    player_health=0
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sync vars ( GMS )


//avatar
    gms_self_set("Hat",hat)
    gms_self_set("Suit",suit)
    
    
    gms_self_set("LarmC",leftarm_color)
    gms_self_set("RarmC",rightarm_color)
    
    
    gms_self_set("LlegC",leftleg_color)
    gms_self_set("RlegC",rightleg_color)
    
    
    gms_self_set("TorsoC",torso_color)
    gms_self_set("HeadC",head_color)
    
    
//other
    gms_self_set("FACE",facing)
    
    gms_self_set("X",x)
    gms_self_set("Y",y)

    
    
    gms_self_set("Anim",animation)

    
    
    gms_self_set("Health",player_health)
    
    
    
    
    
    
    
    
    
    
    
//angles
    
    gms_self_set("leftarm_angle",leftarm_angle)
    
    gms_self_set("rightarm_angle",rightarm_angle)
    
    gms_self_set("leftleg_angle",leftleg_angle)
    
    gms_self_set("rightleg_angle",rightleg_angle)
    
    gms_self_set("head_angle",head_angle)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_explosion">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///do damage
player_health-=5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collision
move_contact_solid(direction,6)
vspeed=0
animation=0



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//instance_create(0,0,obj_genpart)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
